{
    "tab-0": "Lektionen",
    "tab-1": "Demo",
    "tab-2": "Downloads",
    "lesson_page": {
        "p-0": "Wenn wir lange Strecken zurücklegen müssen, wollen wir so schnell wie möglich von einem Ort zum anderen gelangen. Vor dieser Herausforderung der effektiven Routenplanung standen und stehen die Menschen vor langer Zeit ebenso wie heute. Aber kann uns die Quantenphysik diese Arbeit abnehmen?",
        "p-1": "Dieser Kurs ist ein umfassender Leitfaden zum quantenmechanischen Ansatz für dieses bekannte Optimierungsproblem. Du wirst lernen:",
        "p-2": "Weitere Informationen findest du im",
        "li-0": "Was Graphen sind und wie man mit ihnen rechnet",
        "li-1": "Wie QUBO-Probleme konstruiert sind",
        "li-2": "Wie das Traveling-Salesman-Problem als Hamilton-Matrix für Quantenannealer dargestellt werden kann",
        "li-3": "Was die Vor- und Nachteile dieser Methode sind",
        "li-4": "Wie du Wegfindung bei deinen eigenen Graphen durchführen kannst",
        "Link": "GitHub-Repository des Projekts",
        "strong": "Viel Spaß beim Lernen!",
        "h2-0": "Kapitel 1",
        "h2-1": "Kapitel 2",
        "h2-2": "Kapitel 3",
        "h2-3": "Kapitel 4",
        "h2-4": "Kapitel 5"
    },
    "lesson-xxxxx": {
        "h2-0": "Wo liegen die Grenzen?",
        "p-0": "Obwohl die unschlagbare Geschwindigkeit dieses Quantenalgorithmus ihn sehr attraktiv macht, hat er auch einige große Einschränkungen. Manche davon ergeben sich einfach aus dem heutigen Stand der Technologie und werden wahrscheinlich durch künftige Fortschritte auf dem Gebiet des Quantencomputings überwunden werden. Da ein Graph mit <i>n</i> Knoten zunächst in eine Tour-Matrix mit <i>n<sup>2</sup></i> Elementen umgewandelt wird, steigt die Zahl der benötigten Qubits und Verbindungen quartisch, d.h. um einen Exponenten von vier. Analog zur traditionellen Informatik könnte man die <i>Komplexität</i> des Quantenalgorithmus wie folgt charakterisieren:",
        "p-1": "Mit zunehmender Anzahl der miteinander verbundenen Qubits steigt die Anzahl der physikalischen Qubits, die zu logischen Qubits kombiniert werden müssen, wodurch die Wahrscheinlichkeit falscher Ergebnisse exponentiell ansteigt. Aus diesem Grund ist <span class=\"emphasis\">n = 8</span> ungefähr die Grenze dessen, was das aktuelle D-Wave Advantage-System lösen kann, da jedes Qubit nur mit 15 anderen verbunden sein kann. Mit jeder hinzugefügten Stadt wird auch das Embedding größer, bis schließlich der gesamte Platz auf der QPU aufgebraucht ist. Die Abbildung rechts zeigt die Fläche, den das Embedding des Problems mit der Größe <span class=\"emphasis\">n = 8</span> auf der QPU einnimmt, mit Ketten, die teilweise 8-9 Qubits lang sind. Aufgrund zunehmender Rechnerkapazitäten und komplexerer Architekturen wird diese Einschränkung jedoch in Zukunft wahrscheinlich zunehmend irrelevant werden.",
        "p-2": "Die <i>Matrixdichte</i>, d.h. der Anteil der Matrixeinträge, die keine Nullen sind, spielt ebenfalls eine Rolle für die Recheneffizienz. Je spärlicher der Hamiltonian ist, d.h. je weniger Ketten im Verhältnis zur Problemgröße benötigt werden, desto einfacher ist es für den Quantencomputer, das QUBO-Problem zu lösen. Da die von diesem Quanten-TSP-Algorithmus erzeugten Matrizen relativ dicht sind, wird die Leistungsgrenze bei kleineren Problemgrößen als üblich erreicht. Diese Einschränkung ist weitaus relevanter, da noch nicht absehbar ist, ob die Trefferquote von Quantenannealern allein durch Skalierung erhöht werden kann.",
        "p-3": "Bei der Übermittlung von Problemen an die QPU wird das Embedding automatisch von D-Wave Ocean generiert, um Zeit zu sparen, insbesondere bei größeren Problemen. Allerdings ist auch dies eine komplexe Optimierungsaufgabe, weshalb die Algorithmen wahrscheinlich nicht die beste Lösung finden werden. Wenn wir die Effizienz maximieren wollten, wäre es daher theoretisch möglich, das QUBO-Problem manuell zu embedden und jedes Qubit und jede Verbindung von Hand zu setzen. Wenn du an der technischen Seite interessiert bist, findest du die Details in der",
        "p-4": "Dieses Vorhaben erfordert jedoch nicht nur eine große Menge weiterer mathematischer Berechnungen, sondern auch eine eingehende und fundierte Kenntnis der QPU-Topologie. Das Verfahren ist zeitaufwendig und muss für jede einzelne Problemgröße wiederholt werden, so dass es sich nur für einige kleine Probleme lohnt.",
        "h3-0": "Ein Lösungsansatz: Manuelles Embedding",
        "Link-0": "offizielle Dokumentation"
    },
    "button-0": "Starten",
    "button-1": "Herunterladen",
    "footer": "Erstellt mit"
}